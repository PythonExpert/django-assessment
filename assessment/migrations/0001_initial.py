# -*- coding: utf-8 -*-
# Generated by Django 1.10.1 on 2016-10-03 16:50
from __future__ import unicode_literals

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('answer', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('choice_value', models.CharField(max_length=255)),
                ('is_correct', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('question', models.CharField(max_length=255)),
                ('of_type', models.IntegerField(choices=[(1, 'True or False'), (2, 'Multiple Choice'), (3, 'Text')], default=1)),
            ],
            options={
                'ordering': ['survey', 'id'],
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('completed_on', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=160)),
                ('slug', models.SlugField(max_length=160, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('description', models.TextField()),
                ('start_date_time', models.DateTimeField(default=datetime.datetime.now)),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assessment_surveys', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['is_active', 'start_date_time'],
            },
        ),
        migrations.CreateModel(
            name='SurveyAdmin',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('survey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assessment.Survey')),
            ],
        ),
        migrations.CreateModel(
            name='SurveyGroup',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=160)),
                ('is_active', models.BooleanField(default=True)),
                ('surveys', models.ManyToManyField(blank=True, related_name='surveygroups', to='assessment.Survey')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='result',
            name='survey',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='results', to='assessment.Survey'),
        ),
        migrations.AddField(
            model_name='result',
            name='user',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='results', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='question',
            name='survey',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assessment.Survey'),
        ),
        migrations.AddField(
            model_name='profile',
            name='survey_groups',
            field=models.ManyToManyField(blank=True, related_name='profile_surveygroups', to='assessment.SurveyGroup'),
        ),
        migrations.AddField(
            model_name='profile',
            name='surveys',
            field=models.ManyToManyField(blank=True, related_name='profile_surveys', to='assessment.Survey'),
        ),
        migrations.AddField(
            model_name='profile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='assessment_profile', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='choice',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choices', to='assessment.Question'),
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='assessment.Question'),
        ),
        migrations.AddField(
            model_name='answer',
            name='result',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='assessment.Result'),
        ),
        migrations.AlterUniqueTogether(
            name='result',
            unique_together=set([('survey', 'user')]),
        ),
        migrations.AlterUniqueTogether(
            name='answer',
            unique_together=set([('result', 'question')]),
        ),
    ]
